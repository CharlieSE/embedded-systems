


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: ***Your Names**update this***
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 8/24/2018
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 2 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: One button and one LED
                       )
    8 00000000         ;  PE2 is Button input  (1 means pressed, 0 means not pr
                       essed)
    9 00000000         ;  PE3 is LED output (1 activates external LED on protob
                       oard)
   10 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal) 
   11 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   12 00000000         ; Overall functionality of this system is to operate lik
                       e this
   13 00000000         ;   1) Make PE3 an output and make PE2 and PF4 inputs.
   14 00000000         ;   2) The system starts with the the LED toggling at 2H
                       z,
   15 00000000         ;      which is 2 times per second with a duty-cycle of 
                       30%.
   16 00000000         ;      Therefore, the LED is ON for 150ms and off for 35
                       0 ms.
   17 00000000         ;   3) When the button (PE2) is pressed-and-released inc
                       rease
   18 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   19 00000000         ;      press-and-release the duty cycle changes from 30%
                        to 70% to 70%
   20 00000000         ;      to 90% to 10% to 30% so on
   21 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   22 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   23 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   24 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   25 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 2Hz.
   26 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   27 00000000         ;         cycle or reset to 30%.
   28 00000000         ;      TIP: debugging the breathing LED algorithm using 
                       the real board.
   29 00000000         ; PortE device registers
   30 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   31 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   32 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   33 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C



ARM Macro Assembler    Page 2 


   34 00000000         ; PortF device registers
   35 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   36 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   37 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   38 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   39 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   40 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   41 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   42 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   43 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   44 00000000         
   45 00000000         ;Duty Cycle Constants
   46 00000000 000F0886 
                       DUTY_10 EQU              0x000F0886  ;ON for 50ms
   47 00000000 002D1991 
                       DUTY_30 EQU              0x002D1991  ;ON for 150ms
   48 00000000 004B2A9C 
                       DUTY_50 EQU              0x004B2A9C  ;ON for 250ms
   49 00000000 00693BA8 
                       DUTY_70 EQU              0x00693BA8  ;ON for 350ms
   50 00000000 00874CB3 
                       DUTY_90 EQU              0x00874CB3  ;ON for 450ms
   51 00000000         
   52 00000000         ;Breathing Cycle Constants
   53 00000000 001E110B 
                       AIR_100 EQU              0x001E110B  ;100 ms
   54 00000000         
   55 00000000                 IMPORT           TExaS_Init
   56 00000000                 THUMB
   57 00000000                 AREA             DATA, ALIGN=2
   58 00000000         ;global variables go here
   59 00000000         
   60 00000000         
   61 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   62 00000000                 THUMB
   63 00000000                 EXPORT           Start
   64 00000000         Start
   65 00000000         ; TExaS_Init sets bus clock at 80 MHz
   66 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 



ARM Macro Assembler    Page 3 


                                                            on PD3
   67 00000004         ; Initialization goes here
   68 00000004         
   69 00000004 4943            LDR              R1, =SYSCTL_RCGCGPIO_R ;clock
   70 00000006 6808            LDR              R0, [R1]
   71 00000008 F040 0030       ORR              R0, R0, #0x30 ;setting bit 4 fo
                                                            r port E
   72 0000000C 6008            STR              R0, [R1]    ;storing to clock
   73 0000000E BF00            NOP                          ;delay for clock
   74 00000010 BF00            NOP
   75 00000012         
   76 00000012 4941            LDR              R1, =GPIO_PORTE_DIR_R
   77 00000014 F020 000C       BIC              R0, #0X0C
   78 00000018 F040 0008       ORR              R0, #0X08   ;0 input 1 output p
                                                            e3 output 
   79 0000001C 6008            STR              R0, [R1]
   80 0000001E         
   81 0000001E 493F            LDR              R1, =GPIO_PORTE_DEN_R
   82 00000020 F020 000C       BIC              R0, #0x0C
   83 00000024 F040 000C       ORR              R0, #0X0C
   84 00000028 6008            STR              R0, [R1]
   85 0000002A         
   86 0000002A 493D            LDR              R1, =GPIO_PORTF_DIR_R
   87 0000002C F020 0010       BIC              R0, #0X10
   88 00000030 F040 0010       ORR              R0, #0X10
   89 00000034 6008            STR              R0, [R1]
   90 00000036         
   91 00000036 493B            LDR              R1, =GPIO_PORTF_DEN_R
   92 00000038 F020 0010       BIC              R0, #0X10
   93 0000003C F040 0010       ORR              R0, #0X10
   94 00000040 6008            STR              R0, [R1]
   95 00000042         
   96 00000042         
   97 00000042 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
   98 00000044         loop
   99 00000044         ; main engine goes here
  100 00000044         
  101 00000044 4838    next    LDR              R0, =DUTY_70 ;OFF Delay, in ms
  102 00000046 F000 F84B       BL               Delay
  103 0000004A F000 F84C       BL               Toggle
  104 0000004E 4837            LDR              R0, =DUTY_30 ;ON Delay, in ms
  105 00000050 F000 F846       BL               Delay
  106 00000054 F000 F847       BL               Toggle
  107 00000058 F001 0204       AND              R2, R1, #0x04
  108 0000005C 2A00            CMP              R2, #0
  109 0000005E D0F1            BEQ              next
  110 00000060 F000 F847       BL               Loop1
  111 00000064         
  112 00000064 4832    next1   LDR              R0, =DUTY_50 ;ON & OFF Delay, i
                                                            n ms
  113 00000066 F000 F83B       BL               Delay
  114 0000006A F000 F83C       BL               Toggle
  115 0000006E F001 0204       AND              R2, R1, #0x04
  116 00000072 2A00            CMP              R2, #0x00
  117 00000074 D0F6            BEQ              next1
  118 00000076 F000 F83C       BL               Loop1
  119 0000007A         



ARM Macro Assembler    Page 4 


  120 0000007A 482C    next2   LDR              R0, =DUTY_30 ;OFF Delay, in ms
  121 0000007C F000 F830       BL               Delay
  122 00000080 F000 F831       BL               Toggle
  123 00000084 4828            LDR              R0, =DUTY_70 ;ON Delay, in ms
  124 00000086 F000 F82B       BL               Delay
  125 0000008A F000 F82C       BL               Toggle
  126 0000008E F001 0204       AND              R2, R1, #0x04
  127 00000092 2A00            CMP              R2, #0
  128 00000094 D0F1            BEQ              next2
  129 00000096 F000 F82C       BL               Loop1
  130 0000009A         
  131 0000009A 4826    next3   LDR              R0, =DUTY_10 ;OFF Delay, in ms
  132 0000009C F000 F820       BL               Delay
  133 000000A0 F000 F821       BL               Toggle
  134 000000A4 4824            LDR              R0, =DUTY_90 ;ON Delay, in ms
  135 000000A6 F000 F81B       BL               Delay
  136 000000AA F000 F81C       BL               Toggle
  137 000000AE F001 0204       AND              R2, R1, #0x04
  138 000000B2 2A00            CMP              R2, #0
  139 000000B4 D0F1            BEQ              next3
  140 000000B6 F000 F81C       BL               Loop1
  141 000000BA         
  142 000000BA 481F    next4   LDR              R0, =DUTY_90 ;OFF Delay, in ms
  143 000000BC F000 F810       BL               Delay
  144 000000C0 F000 F811       BL               Toggle
  145 000000C4 481B            LDR              R0, =DUTY_10 ;ON Delay, in ms
  146 000000C6 F000 F80B       BL               Delay
  147 000000CA F000 F80C       BL               Toggle
  148 000000CE F001 0204       AND              R2, R1, #0x04
  149 000000D2 2A00            CMP              R2, #0
  150 000000D4 D0F1            BEQ              next4
  151 000000D6 F000 F80C       BL               Loop1
  152 000000DA         
  153 000000DA E7B3            B                loop
  154 000000DC         
  155 000000DC         
  156 000000DC         
  157 000000DC         
  158 000000DC D0B2    B_LED   BEQ              next
  159 000000DE E000            B                Breathing
  160 000000E0         
  161 000000E0         Delay
  162 000000E0 1E40    wait    SUBS             R0, R0, #1
  163 000000E2 D1FD            BNE              wait
  164 000000E4 4770            BX               LR
  165 000000E6         
  166 000000E6         Toggle
  167 000000E6 4815            LDR              R0, =GPIO_PORTE_DATA_R 
                                                            ;Toggle LED at PE3
  168 000000E8 6801            LDR              R1, [R0]
  169 000000EA F081 0108       EOR              R1, #0x08
  170 000000EE 6001            STR              R1, [R0]
  171 000000F0 4770            BX               LR
  172 000000F2         
  173 000000F2         Loop1
  174 000000F2 4812            LDR              R0, =GPIO_PORTE_DATA_R 
                                                            ;Toggle LED at PE3
  175 000000F4 B510            PUSH             {LR, R4}
  176 000000F6 F000 F808       BL               LED_Off



ARM Macro Assembler    Page 5 


  177 000000FA E8BD 4010       POP              {LR, R4}
  178 000000FE 6801            LDR              R1, [R0]
  179 00000100 F001 0204       AND              R2, R1, #0x04
  180 00000104 2A00            CMP              R2, #0
  181 00000106 D1F4            BNE              Loop1
  182 00000108 4770            BX               LR
  183 0000010A         
  184 0000010A         LED_Off
  185 0000010A 6801            LDR              R1, [R0]
  186 0000010C F021 0108       BIC              R1, #0x08
  187 00000110 6001            STR              R1, [R0]
  188 00000112 4770            BX               LR
  189 00000114         
  190 00000114         
  191 00000114         
  192 00000114                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  193 00000114                 END                          ; end of file
              400FE608 
              40024400 
              4002451C 
              40025400 
              4002551C 
              00693BA8 
              002D1991 
              004B2A9C 
              000F0886 
              00874CB3 
              400243FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_Lab3 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\
5.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM
4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 525" --pr
edefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\main.lst main
.s
