


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Carlos Borja & Nyree Masoian
    3 00000000         ; Date Created: 2/14/2017
    4 00000000         ; Last Modified: 10/09/2018
    5 00000000         ; You are given a simple stepper motor software system w
                       ith one input and
    6 00000000         ; four outputs. This program runs, but you are asked to 
                       add minimally intrusive
    7 00000000         ; debugging instruments to verify it is running properly
                       . 
    8 00000000         ;   If the input PE4 is low, the stepper motor outputs c
                       ycle 10,6,5,9,...
    9 00000000         ;   If the input PE4 is high, the stepper motor outputs 
                       cycle 5,6,10,9,...
   10 00000000         ;   Insert debugging instruments which gather data (stat
                       e and timing)
   11 00000000         ;   to verify that the system is functioning as expected
                       .
   12 00000000         ; Hardware connections (External: One button and four ou
                       tputs to stepper motor)
   13 00000000         ;  PE4 is Button input  (1 means pressed, 0 means not pr
                       essed)
   14 00000000         ;  PE3-0 are stepper motor outputs 
   15 00000000         ;  PF2 is Blue LED on Launchpad used as a heartbeat
   16 00000000         ; Instrumentation data to be gathered is as follows:
   17 00000000         ; After every output to Port E, collect one state and ti
                       me entry. 
   18 00000000         ; The state information is the 5 bits on Port E PE4-0
   19 00000000         ;   place one 8-bit entry in your Data Buffer  
   20 00000000         ; The time information is the 24-bit time difference bet
                       ween this output and the previous (in 12.5ns units)
   21 00000000         ;   place one 32-bit entry in the Time Buffer
   22 00000000         ;    24-bit value of the SysTick's Current register (NVI
                       C_ST_CURRENT_R)
   23 00000000         ;    you must handle the roll over as Current goes 3,2,1
                       ,0,0x00FFFFFF,0xFFFFFE,
   24 00000000         ; Note: The size of both buffers is 100 entries. Once yo
                       u fill these
   25 00000000         ;       entries you should stop collecting data
   26 00000000         ; The heartbeat is an indicator of the running of the pr
                       ogram. 
   27 00000000         ; On each iteration of the main loop of your program tog
                       gle the 
   28 00000000         ; LED to indicate that your code(system) is live (not st
                       uck or dead).
   29 00000000         
   30 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   31 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   32 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   33 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   34 00000000 400FE608 



ARM Macro Assembler    Page 2 


                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   35 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   36 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   37 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   38 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   39 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   40 00000000         
   41 00000000         ; RAM Area
   42 00000000                 AREA             DATA, ALIGN=2
   43 00000000 00 00 00 
              00       Index   SPACE            4           ; index into Steppe
                                                            r table 0,1,2,3
   44 00000004 00 00 00 
              00       Direction
                               SPACE            4           ; -1 for CCW, 0 for
                                                             stop 1 for CW
   45 00000008         
   46 00000008         ;place your debug variables in RAM here
   47 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       TimeBuffer
                               SPACE            400
   48 00000198 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       DataBuffer
                               SPACE            100
   49 000001FC 00 00 00 
              00       TimePointer
                               SPACE            4
   50 00000200 00 00 00 
              00       DataPointer
                               SPACE            4
   51 00000204 00 00 00 
              00       Counter SPACE            4
   52 00000208 00 00 00 
              00       PrevTime
                               SPACE            4
   53 0000020C         
   54 0000020C         
   55 0000020C         ; ROM Area
   56 0000020C                 IMPORT           TExaS_Init
   57 0000020C                 IMPORT           SysTick_Init
   58 0000020C         ;-UUU-Import routine(s) from other assembly files (like 
                       SysTick.s) here
   59 0000020C                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   60 00000000                 THUMB
   61 00000000 05 06 0A 
              09       Stepper DCB              5,6,10,9
   62 00000004                 EXPORT           Start
   63 00000004         
   64 00000004         Start
   65 00000004         ; TExaS_Init sets bus clock at 80 MHz
   66 00000004 F04F 0004       MOV              R0,#4       ; PORT E (PE5-PE0 o
                                                            ut logic analyzer t
                                                            o TExasDisplay)
   67 00000008 F7FF FFFE       BL               TExaS_Init  ; logic analyzer, 8
                                                            0 MHz
   68 0000000C         ;place your initializations here
   69 0000000C F000 F81D       BL               Stepper_Init ; initialize stepp
                                                            er motor
   70 00000010         
   71 00000010         ;**********************



ARM Macro Assembler    Page 6 


   72 00000010 F000 F84F       BL               Debug_Init  ;(you write this)
   73 00000014         ;**********************
   74 00000014 B662            CPSIE            I           ; TExaS logic analy
                                                            zer runs on interru
                                                            pts
   75 00000016 F04F 0500       MOV              R5,#0       ; last PE4
   76 0000001A         loop
   77 0000001A         
   78 0000001A 496B            LDR              R1,=GPIO_PORTE_DATA_R
   79 0000001C 680C            LDR              R4,[R1]     ;current value of s
                                                            witch
   80 0000001E F004 0410       AND              R4,R4,#0x10 ; select just bit 4
                                                            
   81 00000022 2C00            CMP              R4,#0
   82 00000024 D00A            BEQ              no          ; skip if not pushe
                                                            d
   83 00000026 2D00            CMP              R5,#0
   84 00000028 D108            BNE              no          ; skip if pushed la
                                                            st time
   85 0000002A         ; this time yes, last time no
   86 0000002A 4968            LDR              R1,=Direction
   87 0000002C 6808            LDR              R0,[R1]     ; current direction
                                                            
   88 0000002E F100 0001       ADD              R0,R0,#1    ;-1,0,1 to 0,1,2
   89 00000032 2802            CMP              R0,#2
   90 00000034 D101            BNE              ok
   91 00000036 F04F 30FF       MOV              R0,#-1      ; cycles through va
                                                            lues -1,0,1
   92 0000003A 6008    ok      STR              R0,[R1]     ; Direction=0 (CW) 
                                                             
   93 0000003C 4625    no      MOV              R5,R4       ; setup for next ti
                                                            me
   94 0000003E F000 F825       BL               Stepper_Step
   95 00000042 4863            LDR              R0,=1600000
   96 00000044 F000 F832       BL               Wait        ; time delay fixed 
                                                            but not accurate   
                                                            
   97 00000048 E7E7            B                loop
   98 0000004A         ;Initialize stepper motor interface
   99 0000004A         Stepper_Init
  100 0000004A F04F 0001       MOV              R0,#1
  101 0000004E 495F            LDR              R1,=Direction
  102 00000050 6008            STR              R0,[R1]     ; Direction=0 (CW)
  103 00000052 F04F 0000       MOV              R0,#0
  104 00000056 495F            LDR              R1,=Index
  105 00000058 6008            STR              R0,[R1]     ; Index=0
  106 0000005A         ; 1) activate clock for Port E
  107 0000005A 495F            LDR              R1, =SYSCTL_RCGCGPIO_R
  108 0000005C 6808            LDR              R0, [R1]
  109 0000005E F040 0010       ORR              R0, R0, #0x10 ; Clock for E
  110 00000062 6008            STR              R0, [R1]
  111 00000064 BF00            NOP
  112 00000066 BF00            NOP                          ; allow time to fin
                                                            ish activating
  113 00000068         ; 2) no need to unlock PE4-0
  114 00000068         ; 3) set direction register
  115 00000068 495C            LDR              R1, =GPIO_PORTE_DIR_R
  116 0000006A 6808            LDR              R0, [R1]
  117 0000006C F040 000F       ORR              R0, R0, #0x0F 



ARM Macro Assembler    Page 7 


                                                            ; Output on PE0-PE3
                                                            
  118 00000070 F020 0010       BIC              R0, R0, #0x10 ; Input on PE4
  119 00000074 6008            STR              R0, [R1]
  120 00000076         ; 4) regular port function
  121 00000076 495A            LDR              R1, =GPIO_PORTE_AFSEL_R
  122 00000078 6808            LDR              R0, [R1]
  123 0000007A F020 001F       BIC              R0, R0, #0x1F ; GPIO on PE4-0
  124 0000007E 6008            STR              R0, [R1]
  125 00000080         ; 5) enable digital port
  126 00000080 4958            LDR              R1, =GPIO_PORTE_DEN_R
  127 00000082 6808            LDR              R0, [R1]
  128 00000084 F040 001F       ORR              R0, R0, #0x1F ; enable PE4-0
  129 00000088 6008            STR              R0, [R1]
  130 0000008A 4770            BX               LR
  131 0000008C         ; Step the motor clockwise
  132 0000008C         ; Direction determines the rotational direction
  133 0000008C         ; Input: None
  134 0000008C         ; Output: None
  135 0000008C         Stepper_Step
  136 0000008C B510            PUSH             {R4,LR}
  137 0000008E 4951            LDR              R1,=Index
  138 00000090 680A            LDR              R2,[R1]     ; old Index
  139 00000092 4B4E            LDR              R3,=Direction
  140 00000094 6818            LDR              R0,[R3]     ; -1 for CCW, 0 for
                                                             stop 1 for CW
  141 00000096 4402            ADD              R2,R2,R0
  142 00000098 F002 0203       AND              R2,R2,#3    ; 0,1,2,3,0,1,2,...
                                                            
  143 0000009C 600A            STR              R2,[R1]     ; new Index
  144 0000009E 4B52            LDR              R3,=Stepper ; table
  145 000000A0 5CD0            LDRB             R0,[R2,R3]  ; next output: 5,6,
                                                            10,9,5,6,10,...
  146 000000A2 4949            LDR              R1,=GPIO_PORTE_DATA_R 
                                                            ; change PE3-PE0
  147 000000A4 6008            STR              R0,[R1]
  148 000000A6 F000 F833       BL               Debug_Capture
  149 000000AA BD10            POP              {R4,PC}
  150 000000AC         ; inaccurate and inefficient time delay
  151 000000AC         Wait
  152 000000AC 1E40            SUBS             R0,R0,#1    ; outer loop
  153 000000AE D1FD            BNE              Wait
  154 000000B0 4770            BX               LR
  155 000000B2         
  156 000000B2         Debug_Init
  157 000000B2 B51F            PUSH             {R0-R4,LR}
  158 000000B4         
  159 000000B4 F000 F854       BL               PortF_Init
  160 000000B8 F000 F867       BL               Heartbeat_A
  161 000000BC         
  162 000000BC         ;Populate Buffers   
  163 000000BC 484B            LDR              R0, =DataBuffer ;Starts at 0x20
                                                            00.019C
  164 000000BE F04F 01FF       MOV              R1, #0xFF
  165 000000C2 F04F 0200       MOV              R2, #0
  166 000000C6 5081    loop1   STR              R1, [R0,R2]
  167 000000C8 F102 0201       ADD              R2, R2, #1
  168 000000CC 2A64            CMP              R2, #100
  169 000000CE D1FA            BNE              loop1



ARM Macro Assembler    Page 8 


  170 000000D0         
  171 000000D0 4847            LDR              R0, =TimeBuffer ;Starts at 0x20
                                                            00.000C
  172 000000D2 F04F 31FF       LDR              R1, =0xFFFFFFFF
  173 000000D6 F04F 0200       MOV              R2, #0
  174 000000DA F04F 0404       MOV              R4, #4
  175 000000DE FB02 F304 
                       loop2   MUL              R3, R2, R4
  176 000000E2 50C1            STR              R1, [R0,R3]
  177 000000E4 F102 0201       ADD              R2, R2, #1
  178 000000E8 2A64            CMP              R2, #100
  179 000000EA D1F8            BNE              loop2
  180 000000EC         
  181 000000EC         ;Data & Time Pointer init
  182 000000EC 4841            LDR              R0, =DataPointer
  183 000000EE 493F            LDR              R1, =DataBuffer
  184 000000F0 6001            STR              R1, [R0]
  185 000000F2         
  186 000000F2 4841            LDR              R0, =TimePointer
  187 000000F4 493E            LDR              R1, =TimeBuffer
  188 000000F6 6001            STR              R1, [R0]
  189 000000F8         
  190 000000F8 4840            LDR              R0, =Counter
  191 000000FA 6801            LDR              R1, [R0]
  192 000000FC F04F 0100       MOV              R1, #0
  193 00000100 6001            STR              R1, [R0]
  194 00000102         
  195 00000102 483F            LDR              R0, =PrevTime
  196 00000104 F06F 417F       LDR              R1, =0x00FFFFFF
  197 00000108 6001            STR              R1, [R0]
  198 0000010A         
  199 0000010A         ;Start SysTick_Init
  200 0000010A F7FF FFFE       BL               SysTick_Init
  201 0000010E         
  202 0000010E BD1F            POP              {R0-R4,PC}
  203 00000110         ;Debug capture      
  204 00000110         Debug_Capture
  205 00000110 B57F            PUSH             {R0-R6,LR}
  206 00000112         
  207 00000112 F000 F84A       BL               Heartbeat_B
  208 00000116         
  209 00000116 4839            LDR              R0, =Counter
  210 00000118 6801            LDR              R1, [R0]
  211 0000011A 2964            CMP              R1, #100
  212 0000011C D01E            BEQ              finish
  213 0000011E         
  214 0000011E 482A            LDR              R0, =GPIO_PORTE_DATA_R
  215 00000120 6801            LDR              R1, [R0]
  216 00000122 F001 011F       AND              R1, #0x1F
  217 00000126         
  218 00000126 4C37            LDR              R4, =NVIC_ST_CURRENT_R
  219 00000128 6825            LDR              R5, [R4]
  220 0000012A         
  221 0000012A 4A32            LDR              R2, =DataPointer
  222 0000012C 6813            LDR              R3, [R2]    ;loading address of
                                                             data buffer
  223 0000012E 7019            STRB             R1, [R3]
  224 00000130 F103 0301       ADD              R3, R3, #1  ;R3 data pointer
  225 00000134 6013            STR              R3, [R2]



ARM Macro Assembler    Page 9 


  226 00000136         
  227 00000136         ;prev - current
  228 00000136 4832            LDR              R0, =PrevTime
  229 00000138 6801            LDR              R1, [R0]
  230 0000013A 1B49            SUBS             R1, R1, R5
  231 0000013C F64F 72FF       LDR              R2, =0x0000FFFF
  232 00000140 EA01 0102       AND              R1, R2
  233 00000144 6005            STR              R5, [R0]
  234 00000146         
  235 00000146 4A2C            LDR              R2, =TimePointer
  236 00000148 6813            LDR              R3, [R2]    ;loading address of
                                                             time buffer
  237 0000014A 6019            STR              R1, [R3]
  238 0000014C F103 0304       ADD              R3, R3, #4  ;R3 time pointer
  239 00000150 6013            STR              R3, [R2]
  240 00000152         
  241 00000152 482A            LDR              R0, =Counter
  242 00000154 6801            LDR              R1, [R0]
  243 00000156 F101 0101       ADD              R1, #1
  244 0000015A 6001            STR              R1, [R0]
  245 0000015C         
  246 0000015C         finish
  247 0000015C BD7F            POP              {R0-R6,PC}
  248 0000015E 4770            BX               LR
  249 00000160         
  250 00000160         PortF_Init
  251 00000160         
  252 00000160 491D            LDR              R1, =SYSCTL_RCGCGPIO_R ;clock
  253 00000162 6808            LDR              R0, [R1]
  254 00000164 F040 0020       ORR              R0, R0, #0x20 ;setting bit 5 fo
                                                            r port F
  255 00000168 6008            STR              R0, [R1]    ;storing to clock
  256 0000016A BF00            NOP                          ;delay for clock
  257 0000016C BF00            NOP
  258 0000016E         
  259 0000016E 4826            LDR              R0, =GPIO_PORTF_AFSEL_R
  260 00000170 6801            LDR              R1, [R0]
  261 00000172 F001 0100       AND              R1, #0x00
  262 00000176 6001            STR              R1, [R0]
  263 00000178         
  264 00000178 4924            LDR              R1, =GPIO_PORTF_DIR_R
  265 0000017A F040 0004       ORR              R0, #0x04
  266 0000017E 6008            STR              R0, [R1]
  267 00000180         
  268 00000180 4923            LDR              R1, =GPIO_PORTF_DEN_R
  269 00000182 F040 0004       ORR              R0, #0x04
  270 00000186 6008            STR              R0, [R1]
  271 00000188         
  272 00000188 4770            BX               LR
  273 0000018A         
  274 0000018A         Heartbeat_A
  275 0000018A F04F 0300       MOV              R3, #0
  276 0000018E         
  277 0000018E         beat1
  278 0000018E 4921            LDR              R1, =GPIO_PORTF_DATA_R
  279 00000190 6808            LDR              R0, [R1]
  280 00000192 F080 0004       EOR              R0, #0x04
  281 00000196 6008            STR              R0, [R1]
  282 00000198 F64F 72FF       LDR              R2, =0x0000FFFF



ARM Macro Assembler    Page 10 


  283 0000019C         
  284 0000019C         waiting
  285 0000019C 3A01            SUBS             R2, #1
  286 0000019E D1FD            BNE              waiting
  287 000001A0         
  288 000001A0 F103 0301       ADD              R3, #1
  289 000001A4 2B0A            CMP              R3, #10
  290 000001A6 D1F2            BNE              beat1
  291 000001A8 4770            BX               LR
  292 000001AA         
  293 000001AA         
  294 000001AA         Heartbeat_B
  295 000001AA F04F 0300       MOV              R3, #0
  296 000001AE         
  297 000001AE         beat2
  298 000001AE 4919            LDR              R1, =GPIO_PORTF_DATA_R
  299 000001B0 6808            LDR              R0, [R1]
  300 000001B2 F080 0004       EOR              R0, #0x04
  301 000001B6 6008            STR              R0, [R1]
  302 000001B8 4A17            LDR              R2, =0x0001FFFF
  303 000001BA         
  304 000001BA         waiting2
  305 000001BA 3A01            SUBS             R2, #1
  306 000001BC D1FD            BNE              waiting2
  307 000001BE         
  308 000001BE F103 0301       ADD              R3, #1
  309 000001C2 2B0A            CMP              R3, #10
  310 000001C4 D1F3            BNE              beat2
  311 000001C6 4770            BX               LR
  312 000001C8         
  313 000001C8                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  314 000001C8                 END                          ; end of file
              400243FC 
              00000000 
              00186A00 
              00000000 
              400FE608 
              40024400 
              40024420 
              4002451C 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              E000E018 
              40025420 
              40025400 
              4002551C 
              400253FC 
              0001FFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_Lab4 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\
5.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM
4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 525" --pr



ARM Macro Assembler    Page 11 


edefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\main.lst main
.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Counter 00000204

Symbol: Counter
   Definitions
      At line 51 in file main.s
   Uses
      At line 190 in file main.s
      At line 209 in file main.s
      At line 241 in file main.s

DATA 00000000

Symbol: DATA
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: DATA unused
DataBuffer 00000198

Symbol: DataBuffer
   Definitions
      At line 48 in file main.s
   Uses
      At line 163 in file main.s
      At line 183 in file main.s

DataPointer 00000200

Symbol: DataPointer
   Definitions
      At line 50 in file main.s
   Uses
      At line 182 in file main.s
      At line 221 in file main.s

Direction 00000004

Symbol: Direction
   Definitions
      At line 44 in file main.s
   Uses
      At line 86 in file main.s
      At line 101 in file main.s
      At line 139 in file main.s

Index 00000000

Symbol: Index
   Definitions
      At line 43 in file main.s
   Uses
      At line 104 in file main.s
      At line 137 in file main.s

PrevTime 00000208

Symbol: PrevTime
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 52 in file main.s
   Uses
      At line 195 in file main.s
      At line 228 in file main.s

TimeBuffer 00000008

Symbol: TimeBuffer
   Definitions
      At line 47 in file main.s
   Uses
      At line 171 in file main.s
      At line 187 in file main.s

TimePointer 000001FC

Symbol: TimePointer
   Definitions
      At line 49 in file main.s
   Uses
      At line 186 in file main.s
      At line 235 in file main.s

9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 59 in file main.s
   Uses
      None
Comment: .text unused
Debug_Capture 00000110

Symbol: Debug_Capture
   Definitions
      At line 204 in file main.s
   Uses
      At line 148 in file main.s
Comment: Debug_Capture used once
Debug_Init 000000B2

Symbol: Debug_Init
   Definitions
      At line 156 in file main.s
   Uses
      At line 72 in file main.s
Comment: Debug_Init used once
Heartbeat_A 0000018A

Symbol: Heartbeat_A
   Definitions
      At line 274 in file main.s
   Uses
      At line 160 in file main.s
Comment: Heartbeat_A used once
Heartbeat_B 000001AA

Symbol: Heartbeat_B
   Definitions
      At line 294 in file main.s
   Uses
      At line 207 in file main.s
Comment: Heartbeat_B used once
PortF_Init 00000160

Symbol: PortF_Init
   Definitions
      At line 250 in file main.s
   Uses
      At line 159 in file main.s
Comment: PortF_Init used once
Start 00000004

Symbol: Start
   Definitions
      At line 64 in file main.s
   Uses
      At line 62 in file main.s
Comment: Start used once
Stepper 00000000

Symbol: Stepper



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 61 in file main.s
   Uses
      At line 144 in file main.s
Comment: Stepper used once
Stepper_Init 0000004A

Symbol: Stepper_Init
   Definitions
      At line 99 in file main.s
   Uses
      At line 69 in file main.s
Comment: Stepper_Init used once
Stepper_Step 0000008C

Symbol: Stepper_Step
   Definitions
      At line 135 in file main.s
   Uses
      At line 94 in file main.s
Comment: Stepper_Step used once
Wait 000000AC

Symbol: Wait
   Definitions
      At line 151 in file main.s
   Uses
      At line 96 in file main.s
      At line 153 in file main.s

beat1 0000018E

Symbol: beat1
   Definitions
      At line 277 in file main.s
   Uses
      At line 290 in file main.s
Comment: beat1 used once
beat2 000001AE

Symbol: beat2
   Definitions
      At line 297 in file main.s
   Uses
      At line 310 in file main.s
Comment: beat2 used once
finish 0000015C

Symbol: finish
   Definitions
      At line 246 in file main.s
   Uses
      At line 212 in file main.s
Comment: finish used once
loop 0000001A

Symbol: loop
   Definitions
      At line 76 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 97 in file main.s
Comment: loop used once
loop1 000000C6

Symbol: loop1
   Definitions
      At line 166 in file main.s
   Uses
      At line 169 in file main.s
Comment: loop1 used once
loop2 000000DE

Symbol: loop2
   Definitions
      At line 175 in file main.s
   Uses
      At line 179 in file main.s
Comment: loop2 used once
no 0000003C

Symbol: no
   Definitions
      At line 93 in file main.s
   Uses
      At line 82 in file main.s
      At line 84 in file main.s

ok 0000003A

Symbol: ok
   Definitions
      At line 92 in file main.s
   Uses
      At line 90 in file main.s
Comment: ok used once
waiting 0000019C

Symbol: waiting
   Definitions
      At line 284 in file main.s
   Uses
      At line 286 in file main.s
Comment: waiting used once
waiting2 000001BA

Symbol: waiting2
   Definitions
      At line 304 in file main.s
   Uses
      At line 306 in file main.s
Comment: waiting2 used once
21 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 121 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 78 in file main.s
      At line 146 in file main.s
      At line 214 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 126 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 115 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 259 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 278 in file main.s
      At line 298 in file main.s

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 268 in file main.s
Comment: GPIO_PORTF_DEN_R used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 264 in file main.s
Comment: GPIO_PORTF_DIR_R used once
NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 218 in file main.s
Comment: NVIC_ST_CURRENT_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 107 in file main.s
      At line 252 in file main.s

10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 57 in file main.s
   Uses
      At line 200 in file main.s
Comment: SysTick_Init used once
TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 56 in file main.s
   Uses
      At line 67 in file main.s
Comment: TExaS_Init used once
2 symbols
378 symbols in table
